{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap bde334d514c86b881749","webpack:///./src/webgl.js","webpack:///./src/programs/identity2d.js","webpack:///./src/index.js","webpack:///./src/programs/gameoflife-blur.js","webpack:///./src/programs/gameoflife.js","webpack:///./src/render-program.js","webpack:///./src/state-program.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createProgram","vertexSource","fragmentSource","resize","size","Math","pow","floor","log2","min","window","innerWidth","innerHeight","canvas","width","height","style","gl","viewport","document","body","querySelector","getContext","addEventListener","clearColor","clear","COLOR_BUFFER_BIT","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","console","log","fragmentShader","FRAGMENT_SHADER","shaderProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","createTexture","tTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","Identity2D","default","_interopRequireDefault","obj","draw","golStateProgram","incrementState","golRenderProgram","stateTexture","requestAnimationFrame","_stateProgram","_stateProgram2","_renderProgram","_renderProgram2","_gameoflife","_gameoflife2","_gameoflifeBlur","_gameoflifeBlur2","initialArray","time","j","random","setState","ImageData","Uint8ClampedArray","timeEnd","_identity2d","_identity2d2","GameOfLifeBlur","GameOfLife","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_webgl","RenderProgram","_ref","this","_createProgram","currentState","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","Float32Array","STATIC_DRAW","aPosition","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","uWidth","getUniformLocation","uniform1f","drawArrays","TRIANGLE_STRIP","StateProgram","uShouldUpdate","tTexture0","tTexture1","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texImage2D","RGBA","UNSIGNED_BYTE","renderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","state","uniform1i","framebufferTexture2D","COLOR_ATTACHMENT0"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.createProgram = createProgram;\nexports.createTexture = createTexture;\nfunction createProgram(vertexSource, fragmentSource) {\n\t// GLOBALS\n\tvar body = document.body;\n\tvar canvas = document.querySelector('canvas');\n\tvar gl = canvas.getContext('webgl2');\n\t// END GLOBALS\n\n\t// BEGIN WINDOW SIZING\n\tfunction resize() {\n\t\tvar size = Math.pow(2, Math.floor(Math.log2(Math.min(window.innerWidth, window.innerHeight)))) * 2;\n\t\t// const size = 256;\n\t\tcanvas.width = size;\n\t\tcanvas.height = size;\n\t\tcanvas.style.width = size / 2 + 'px';\n\t\tcanvas.style.height = size / 2 + 'px';\n\n\t\t// Set viewport\n\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t}\n\tresize();\n\n\twindow.addEventListener('resize', resize);\n\t// END WINDOW SIZING\n\n\t// GL SETTINGS\n\n\t// Color to draw on clear\n\tgl.clearColor(0, 0, 0, 1);\n\n\t// Clear buffers\n\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t// END GL SETTINGS\n\n\t// INITIALIZE SHADERS\n\n\t// CREATE VERTEX SHADER\n\tvar vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vertexShader, vertexSource);\n\tgl.compileShader(vertexShader);\n\tif (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(vertexShader));\n\t} else {\n\t\tconsole.log(\"Vertex shader compiled\");\n\t}\n\t// END CREATE VERTEX SHADER\n\n\t// CREATE FRAGMENT SHADER\n\tvar fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\tgl.shaderSource(fragmentShader, fragmentSource);\n\tgl.compileShader(fragmentShader);\n\tif (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(fragmentShader));\n\t} else {\n\t\tconsole.log(\"Fragment shader compiled\");\n\t}\n\t// END CREATE FRAGMENT SHADER\n\n\t// COMPILE PROGRAM\n\tvar shaderProgram = gl.createProgram();\n\tgl.attachShader(shaderProgram, vertexShader);\n\tgl.attachShader(shaderProgram, fragmentShader);\n\tgl.linkProgram(shaderProgram);\n\n\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\tthrow new Error(\"Unable to initialize the shader program.\");\n\t} else {\n\t\tconsole.log(\"Initialized shader program\");\n\t}\n\tgl.useProgram(shaderProgram);\n\t// END COMPILE PROGRAM\n\n\t// END INITIALIZE SHADERS\n\n\n\treturn { gl: gl, shaderProgram: shaderProgram };\n}\n\nfunction createTexture() {\n\tvar gl = document.querySelector('canvas').getContext('webgl2');\n\tvar tTexture = gl.createTexture();\n\tgl.activeTexture(gl.TEXTURE0);\n\tgl.bindTexture(gl.TEXTURE_2D, tTexture);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\treturn tTexture;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar Identity2D = {\n\tvertexSource: \"#version 300 es\\n\\t\\tprecision highp float;\\n\\t\\tin vec3 aPosition;\\n\\t\\tout vec2 vTexturePosition;\\n\\t\\tout vec2 vPosition;\\n\\t\\tvoid main(void) {\\n\\t\\t\\tvPosition = aPosition.xy;\\n\\t\\t\\tvTexturePosition = vec2(aPosition.x + 1.0, -1.0 + aPosition.y) * 0.5;\\n\\t\\t\\tgl_Position = vec4(aPosition, 1.0);\\n\\t\\t}\\n\\t\"\n};\n\nexports.default = Identity2D;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _webgl = __webpack_require__(0);\n\nvar _stateProgram = __webpack_require__(6);\n\nvar _stateProgram2 = _interopRequireDefault(_stateProgram);\n\nvar _renderProgram = __webpack_require__(5);\n\nvar _renderProgram2 = _interopRequireDefault(_renderProgram);\n\nvar _gameoflife = __webpack_require__(4);\n\nvar _gameoflife2 = _interopRequireDefault(_gameoflife);\n\nvar _gameoflifeBlur = __webpack_require__(3);\n\nvar _gameoflifeBlur2 = _interopRequireDefault(_gameoflifeBlur);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconsole.log('🐭');\n\nvar golStateProgram = new _stateProgram2.default({ shaderSource: _gameoflife2.default });\nvar golRenderProgram = new _renderProgram2.default({ shaderSource: _gameoflifeBlur2.default });\n\nvar gl = document.querySelector('canvas').getContext('webgl2');\n\n// // const uMousePosition = gl.getUniformLocation(shaderProgram, \"uMousePosition\");\n//\n//\n// // INTERACTION HANDLER\n// var mousePosition = [];\n// gl.canvas.addEventListener('mousemove', evt => {\n//   mousePosition = [\n//     (evt.clientX/gl.canvas.width - 0.5) * 2.0,\n//     (1.0 - evt.clientY/gl.canvas.height - 0.5) * 2.0\n//   ];\n// \t// draw();\n// });\n// END INTERACTION HANDLER\n\n// DRAW LOOP\ngl.clearColor(0, 0, 0, 1.0);\ngl.clear(gl.COLOR_BUFFER_BIT);\n\n//Initial state\n// const initialCanvas = document.createElement('canvas');\n// initialCanvas.width = gl.canvas.width;\n// initialCanvas.height = gl.canvas.height;\n// const context = initialCanvas.getContext('2d');\n// context.globalAlpha = 1.0;\nvar initialArray = [];\nconsole.time('Init');\nfor (var i = 0; i < gl.canvas.width; i++) {\n\tfor (var j = 0; j < gl.canvas.height; j++) {\n\t\tif (Math.random() < 0.35) {\n\t\t\t// context.fillStyle = 'red';\n\t\t\t// context.fillRect(i, j, 1, 1);\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4] = 255;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 1] = 0.0;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 2] = 0.0;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 3] = 255;\n\t\t} else {\n\t\t\t// context.fillStyle = 'black';\n\t\t\t// context.fillRect(i, j, 1, 1);\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4] = 0.0;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 1] = 0.0;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 2] = 0.0;\n\t\t\tinitialArray[(j * gl.canvas.width + i) * 4 + 3] = 255;\n\t\t}\n\t}\n}\n// context.fillStyle = 'red';\n// context.fillRect(0, 0, 64, 64);\n// golStateProgram.setState(initialCanvas);\ngolStateProgram.setState(new ImageData(new Uint8ClampedArray(initialArray), gl.canvas.width, gl.canvas.height));\nconsole.timeEnd('Init');\n\nvar flip = 0;\n\nfunction draw() {\n\t// gl.uniform2f(uMousePosition, mousePosition[0], mousePosition[1]);\n\n\t// golStateProgram.drawState();\n\n\tgolStateProgram.incrementState();\n\n\tgolRenderProgram.draw(golStateProgram.stateTexture());\n\n\trequestAnimationFrame(draw);\n}\nrequestAnimationFrame(draw);\n// END DRAW LOOP\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _identity2d = __webpack_require__(1);\n\nvar _identity2d2 = _interopRequireDefault(_identity2d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GameOfLifeBlur = {\n\tvertexSource: _identity2d2.default.vertexSource,\n\n\tfragmentSource: '#version 300 es\\n\\t\\tprecision highp float;\\n\\t\\tuniform sampler2D uSampler;\\n\\t\\tin vec2 vTexturePosition;\\n\\t\\tin vec2 vPosition;\\n\\t\\tout vec4 fragmentColor;\\n\\n\\t\\tbool isLive(vec2 offset) {\\n\\t\\t\\t\\tvec4 stateColor = texture(uSampler, vTexturePosition + offset);\\n\\t\\t\\t\\tif (stateColor.r == 1.0) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tbool radiusIsLive(int radius) {\\n\\t\\t\\tivec2 size = textureSize(uSampler, 0);\\n\\t\\t\\tfloat stepX = 1.0/float(size.x);\\n\\t\\t\\tfloat stepY = 1.0/float(size.y);\\n\\t\\t\\tint side = 2*radius + 1;\\n\\n\\n\\t\\t\\tfor (int x = 0; x < side; x++) {\\n\\t\\t\\t\\tfor (int y = 0; y < side; y++) {\\n\\t\\t\\t\\t\\tif (isLive(vec2(stepX * float(-radius + x), stepY * float(-radius + y)))) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t\\t//Top\\n\\t\\t\\tfor (int i = 0; i < side; i++) {\\n\\t\\t\\t\\tif (isLive(vec2(stepX * float(-radius + i), stepY * float(-radius)))) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t//Left\\n\\t\\t\\tfor (int i = 0; i < side; i++) {\\n\\t\\t\\t\\tif (isLive(vec2(stepX * float(-radius), - stepY * float(-radius + i)))) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t//Right\\n\\t\\t\\tfor (int i = 0; i < side; i++) {\\n\\t\\t\\t\\tif (isLive(vec2(stepX * float(radius), - stepY * float(-radius + i)))) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t//Bottom\\n\\t\\t\\tfor (int i = 0; i < side; i++) {\\n\\t\\t\\t\\tif (isLive(vec2(stepX * float(-radius + i), stepY * float(radius)))) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main(void) {\\n\\t\\t\\t// fragmentColor = texture(uSampler, vTexturePosition);\\n\\t\\t\\t// return;\\n\\n\\t\\t\\tivec2 size = textureSize(uSampler, 0);\\n\\t\\t\\tfloat stepX = 1.0/float(size.x);\\n\\t\\t\\tfloat stepY = 1.0/float(size.y);\\n\\t\\t\\tif (radiusIsLive(5)) {\\n\\t\\t\\t\\t\\tfragmentColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfragmentColor = vec4(0.0, 0.0, 0.0, 1.0);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t// fragmentColor = (\\n\\t\\t\\t// \\ttexture(uSampler, vTexturePosition) +\\n\\t\\t\\t// \\ttexture(uSampler, vTexturePosition - vec2(stepX, stepY)) +\\n\\t\\t\\t// \\ttexture(uSampler, vTexturePosition - vec2(-stepX, stepY)) +\\n\\t\\t\\t// \\ttexture(uSampler, vTexturePosition - vec2(stepX, -stepY)) +\\n\\t\\t\\t// \\ttexture(uSampler, vTexturePosition - vec2(-stepX, -stepY))\\n\\t\\t\\t// )/5.0;\\n\\t\\t}\\n\\t'\n};\n\nexports.default = GameOfLifeBlur;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _identity2d = __webpack_require__(1);\n\nvar _identity2d2 = _interopRequireDefault(_identity2d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GameOfLife = {\n\tvertexSource: _identity2d2.default.vertexSource,\n\n\tfragmentSource: '#version 300 es\\n\\t\\tprecision highp float;\\n\\t\\tuniform sampler2D uSampler;\\n\\t\\tin vec2 vTexturePosition;\\n\\t\\tin vec2 vPosition;\\n\\t\\tuniform vec2 uMousePosition;\\n\\t\\tuniform highp float uWidth;\\n\\t\\tuniform int uShouldUpdate;\\n\\t\\tout vec4 fragmentColor;\\n\\n\\t\\tbool isLive(vec2 offset) {\\n\\t\\t\\t\\tvec4 lastColor = texture(uSampler, vTexturePosition + offset);\\n\\t\\t\\t\\tif (lastColor.r == 1.0) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvoid main(void) {\\n\\t\\t\\tvec4 lastColor = texture(uSampler, vTexturePosition);\\n\\n\\t\\t\\tif (uShouldUpdate == 0) {\\n\\t\\t\\t\\tfragmentColor = lastColor;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfloat d = distance(uMousePosition, vPosition);\\n\\t\\t\\tif (d < 2.0/uWidth) {\\n\\t\\t\\t\\tfragmentColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tint liveCount = 0;\\n\\t\\t\\tfloat step = 1.0/uWidth;\\n\\n\\t\\t\\tif (isLive(vec2(-step, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(-step, 0))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(-step, step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(0, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(0, step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, 0))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, step))) {liveCount++;}\\n\\n\\t\\t\\t// if (liveCount < 2) {\\n\\t\\t\\t// \\tfragmentColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t// } else if (liveCount < 4) {\\n\\t\\t\\t// \\tfragmentColor = vec4(0, 1.0, 0, 1.0);\\n\\t\\t\\t// } else if (liveCount < 8) {\\n\\t\\t\\t// \\tfragmentColor = vec4(0, 0, 1.0, 1.0);\\n\\t\\t\\t// } else {\\n\\t\\t\\t// \\tfragmentColor = vec4(1.0, 0, 1.0, 1.0);\\n\\t\\t\\t// }\\n\\n\\t\\t\\tbool selfIsLive = isLive(vec2(0,0));\\n\\t\\t\\tif (selfIsLive && (liveCount == 2 || liveCount == 3)) {\\n\\t\\t\\t\\tif (lastColor.g < 1.0) {\\n\\t\\t\\t\\t\\tfragmentColor = lastColor + vec4(1.0, 0.01, 0.0, 1.0);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tfragmentColor = lastColor + vec4(1.0, 0.0, 0.01, 1.0);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (!selfIsLive && (liveCount == 3)) {\\n\\t\\t\\t\\tfragmentColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfragmentColor = vec4(0.0, 0.0, 0.0, 0.8);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t'\n};\nexports.default = GameOfLife;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _webgl = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RenderProgram = function () {\n\tfunction RenderProgram(_ref) {\n\t\tvar shaderSource = _ref.shaderSource;\n\n\t\t_classCallCheck(this, RenderProgram);\n\n\t\tvar _createProgram = (0, _webgl.createProgram)(shaderSource.vertexSource, shaderSource.fragmentSource),\n\t\t    gl = _createProgram.gl,\n\t\t    shaderProgram = _createProgram.shaderProgram;\n\n\t\tthis.gl = gl;\n\t\tthis.shaderProgram = shaderProgram;\n\t\tthis.currentState = 0;\n\n\t\t// INITIALIZE BUFFERS\n\t\tthis.vertexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tthis.vertices = [1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0];\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);\n\t\t// END INITIALIZE BUFFERS\n\n\t\t// POINTERS\n\t\tvar aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\n\t\tgl.enableVertexAttribArray(aPosition);\n\t\t//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\tgl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\n\t\tvar uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\n\t\tgl.uniform1f(uWidth, gl.canvas.width);\n\t}\n\n\t_createClass(RenderProgram, [{\n\t\tkey: \"draw\",\n\t\tvalue: function draw(stateTexture) {\n\t\t\tvar gl = this.gl;\n\n\t\t\tgl.useProgram(this.shaderProgram);\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, stateTexture);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}]);\n\n\treturn RenderProgram;\n}();\n\nexports.default = RenderProgram;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _webgl = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StateProgram = function () {\n\tfunction StateProgram(_ref) {\n\t\tvar shaderSource = _ref.shaderSource;\n\n\t\t_classCallCheck(this, StateProgram);\n\n\t\tvar _createProgram = (0, _webgl.createProgram)(shaderSource.vertexSource, shaderSource.fragmentSource),\n\t\t    gl = _createProgram.gl,\n\t\t    shaderProgram = _createProgram.shaderProgram;\n\n\t\tthis.gl = gl;\n\t\tthis.shaderProgram = shaderProgram;\n\t\tthis.currentState = 0;\n\n\t\t// INITIALIZE BUFFERS\n\t\tthis.vertexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tthis.vertices = [1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0];\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);\n\t\t// END INITIALIZE BUFFERS\n\n\t\t// POINTERS\n\t\tvar aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\n\t\tgl.enableVertexAttribArray(aPosition);\n\t\t//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\tgl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\n\t\tvar uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\n\t\tgl.uniform1f(uWidth, gl.canvas.width);\n\n\t\tthis.uShouldUpdate = gl.getUniformLocation(shaderProgram, \"uShouldUpdate\");\n\n\t\tthis.tTexture0 = (0, _webgl.createTexture)();\n\t\tthis.tTexture1 = (0, _webgl.createTexture)();\n\n\t\tthis.frameBuffer = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t\tthis.frameBuffer.width = gl.canvas.width;\n\t\tthis.frameBuffer.height = gl.canvas.height;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.frameBuffer.width, this.frameBuffer.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n\t\tvar renderBuffer = gl.createRenderbuffer();\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.frameBuffer.width, this.frameBuffer.height);\n\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\t_createClass(StateProgram, [{\n\t\tkey: \"setState\",\n\t\tvalue: function setState(state) {\n\t\t\tvar gl = this.gl;\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, state);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}, {\n\t\tkey: \"drawState\",\n\t\tvalue: function drawState() {\n\t\t\tvar gl = this.gl;\n\t\t\tgl.useProgram(this.shaderProgram);\n\n\t\t\tgl.uniform1i(this.uShouldUpdate, 0);\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tif (this.currentState == 0) {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\t\t} else {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\t}\n\t}, {\n\t\tkey: \"incrementState\",\n\t\tvalue: function incrementState() {\n\t\t\tvar gl = this.gl;\n\t\t\tgl.useProgram(this.shaderProgram);\n\n\t\t\tgl.uniform1i(this.uShouldUpdate, 1);\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t\t\tif (this.currentState == 0) {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.tTexture1, 0);\n\t\t\t} else {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.tTexture0, 0);\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tthis.currentState = (this.currentState + 1) % 2;\n\t\t}\n\t}, {\n\t\tkey: \"stateTexture\",\n\t\tvalue: function stateTexture() {\n\t\t\tif (this.currentState == 0) {\n\t\t\t\treturn this.tTexture0;\n\t\t\t} else {\n\t\t\t\treturn this.tTexture1;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn StateProgram;\n}();\n\nexports.default = StateProgram;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bde334d514c86b881749","export function createProgram(vertexSource, fragmentSource) {\n\t// GLOBALS\n\tconst body = document.body;\n\tconst canvas = document.querySelector('canvas');\n\tconst gl = canvas.getContext('webgl2');\n\t// END GLOBALS\n\n\t// BEGIN WINDOW SIZING\n\tfunction resize() {\n\t\tconst size = Math.pow(2,Math.floor(Math.log2(Math.min(window.innerWidth, window.innerHeight))))*2;\n\t\t// const size = 256;\n\t\tcanvas.width = size;\n\t\tcanvas.height = size;\n\t\tcanvas.style.width = size/2 + 'px';\n\t\tcanvas.style.height = size/2 + 'px';\n\n\t\t// Set viewport\n\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t}\n\tresize();\n\n\twindow.addEventListener('resize', resize);\n\t// END WINDOW SIZING\n\n\t// GL SETTINGS\n\n\t// Color to draw on clear\n\tgl.clearColor(0,0,0,1);\n\n\t// Clear buffers\n\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t// END GL SETTINGS\n\n\t// INITIALIZE SHADERS\n\n\t// CREATE VERTEX SHADER\n\tconst vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vertexShader, vertexSource);\n\tgl.compileShader(vertexShader);\n\tif (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(vertexShader));\n\t}else{\n\t\tconsole.log(\"Vertex shader compiled\");\n\t}\n\t// END CREATE VERTEX SHADER\n\n\t// CREATE FRAGMENT SHADER\n\tconst fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\tgl.shaderSource(fragmentShader, fragmentSource);\n\tgl.compileShader(fragmentShader);\n\tif (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(fragmentShader));\n\t}else{\n\t\tconsole.log(\"Fragment shader compiled\");\n\t}\n\t// END CREATE FRAGMENT SHADER\n\n\t// COMPILE PROGRAM\n\tconst shaderProgram = gl.createProgram();\n\tgl.attachShader(shaderProgram, vertexShader);\n\tgl.attachShader(shaderProgram, fragmentShader);\n\tgl.linkProgram(shaderProgram);\n\n\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\tthrow new Error(\"Unable to initialize the shader program.\");\n\t}else{\n\t\tconsole.log(\"Initialized shader program\");\n\t}\n\tgl.useProgram(shaderProgram);\n\t// END COMPILE PROGRAM\n\n\t// END INITIALIZE SHADERS\n\n\n\treturn {gl, shaderProgram};\n}\n\nexport function createTexture() {\n\tconst gl = document.querySelector('canvas').getContext('webgl2');\n\tconst tTexture = gl.createTexture();\n\tgl.activeTexture(gl.TEXTURE0);\n\tgl.bindTexture(gl.TEXTURE_2D, tTexture);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\treturn tTexture;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webgl.js","const Identity2D = {\n\tvertexSource: `#version 300 es\n\t\tprecision highp float;\n\t\tin vec3 aPosition;\n\t\tout vec2 vTexturePosition;\n\t\tout vec2 vPosition;\n\t\tvoid main(void) {\n\t\t\tvPosition = aPosition.xy;\n\t\t\tvTexturePosition = vec2(aPosition.x + 1.0, -1.0 + aPosition.y) * 0.5;\n\t\t\tgl_Position = vec4(aPosition, 1.0);\n\t\t}\n\t`\n};\n\nexport default Identity2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/programs/identity2d.js","import {createProgram} from './webgl';\nimport StateProgram from './state-program';\nimport RenderProgram from './render-program';\nimport GameOfLife from './programs/gameoflife';\nimport GameOfLifeBlur from './programs/gameoflife-blur';\n\nconsole.log('🐭');\n\nlet golStateProgram = new StateProgram({shaderSource: GameOfLife});\nlet golRenderProgram = new RenderProgram({shaderSource: GameOfLifeBlur});\n\nlet gl = document.querySelector('canvas').getContext('webgl2');\n\n// // const uMousePosition = gl.getUniformLocation(shaderProgram, \"uMousePosition\");\n//\n//\n// // INTERACTION HANDLER\n// var mousePosition = [];\n// gl.canvas.addEventListener('mousemove', evt => {\n//   mousePosition = [\n//     (evt.clientX/gl.canvas.width - 0.5) * 2.0,\n//     (1.0 - evt.clientY/gl.canvas.height - 0.5) * 2.0\n//   ];\n// \t// draw();\n// });\n// END INTERACTION HANDLER\n\n// DRAW LOOP\ngl.clearColor(0, 0, 0, 1.0);\ngl.clear(gl.COLOR_BUFFER_BIT);\n\n//Initial state\n// const initialCanvas = document.createElement('canvas');\n// initialCanvas.width = gl.canvas.width;\n// initialCanvas.height = gl.canvas.height;\n// const context = initialCanvas.getContext('2d');\n// context.globalAlpha = 1.0;\nconst initialArray = [];\nconsole.time('Init');\nfor (var i = 0; i < gl.canvas.width; i++) {\n\tfor (var j = 0; j < gl.canvas.height; j++) {\n\t\tif (Math.random() < 0.35) {\n\t\t\t// context.fillStyle = 'red';\n\t\t\t// context.fillRect(i, j, 1, 1);\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4] = 255;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+1] = 0.0;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+2] = 0.0;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+3] = 255;\n\t\t} else {\n\t\t\t// context.fillStyle = 'black';\n\t\t\t// context.fillRect(i, j, 1, 1);\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4] = 0.0;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+1] = 0.0;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+2] = 0.0;\n\t\t\tinitialArray[(j*gl.canvas.width + i)*4+3] = 255;\n\t\t}\n\t}\n}\n// context.fillStyle = 'red';\n// context.fillRect(0, 0, 64, 64);\n// golStateProgram.setState(initialCanvas);\ngolStateProgram.setState(new ImageData(new Uint8ClampedArray(initialArray), gl.canvas.width, gl.canvas.height));\nconsole.timeEnd('Init');\n\n\nlet flip = 0;\n\nfunction draw() {\n\t// gl.uniform2f(uMousePosition, mousePosition[0], mousePosition[1]);\n\n\t// golStateProgram.drawState();\n\n\tgolStateProgram.incrementState();\n\n\tgolRenderProgram.draw(golStateProgram.stateTexture());\n\n  requestAnimationFrame(draw);\n}\nrequestAnimationFrame(draw);\n// END DRAW LOOP\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import identity from './identity2d';\n\nconst GameOfLifeBlur = {\n\tvertexSource: identity.vertexSource,\n\n\tfragmentSource: `#version 300 es\n\t\tprecision highp float;\n\t\tuniform sampler2D uSampler;\n\t\tin vec2 vTexturePosition;\n\t\tin vec2 vPosition;\n\t\tout vec4 fragmentColor;\n\n\t\tbool isLive(vec2 offset) {\n\t\t\t\tvec4 stateColor = texture(uSampler, vTexturePosition + offset);\n\t\t\t\tif (stateColor.r == 1.0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t}\n\n\t\tbool radiusIsLive(int radius) {\n\t\t\tivec2 size = textureSize(uSampler, 0);\n\t\t\tfloat stepX = 1.0/float(size.x);\n\t\t\tfloat stepY = 1.0/float(size.y);\n\t\t\tint side = 2*radius + 1;\n\n\n\t\t\tfor (int x = 0; x < side; x++) {\n\t\t\t\tfor (int y = 0; y < side; y++) {\n\t\t\t\t\tif (isLive(vec2(stepX * float(-radius + x), stepY * float(-radius + y)))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t\t//Top\n\t\t\tfor (int i = 0; i < side; i++) {\n\t\t\t\tif (isLive(vec2(stepX * float(-radius + i), stepY * float(-radius)))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Left\n\t\t\tfor (int i = 0; i < side; i++) {\n\t\t\t\tif (isLive(vec2(stepX * float(-radius), - stepY * float(-radius + i)))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Right\n\t\t\tfor (int i = 0; i < side; i++) {\n\t\t\t\tif (isLive(vec2(stepX * float(radius), - stepY * float(-radius + i)))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Bottom\n\t\t\tfor (int i = 0; i < side; i++) {\n\t\t\t\tif (isLive(vec2(stepX * float(-radius + i), stepY * float(radius)))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvoid main(void) {\n\t\t\t// fragmentColor = texture(uSampler, vTexturePosition);\n\t\t\t// return;\n\n\t\t\tivec2 size = textureSize(uSampler, 0);\n\t\t\tfloat stepX = 1.0/float(size.x);\n\t\t\tfloat stepY = 1.0/float(size.y);\n\t\t\tif (radiusIsLive(5)) {\n\t\t\t\t\tfragmentColor = vec4(1.0, 1.0, 1.0, 1.0);\n\t\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tfragmentColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// fragmentColor = (\n\t\t\t// \ttexture(uSampler, vTexturePosition) +\n\t\t\t// \ttexture(uSampler, vTexturePosition - vec2(stepX, stepY)) +\n\t\t\t// \ttexture(uSampler, vTexturePosition - vec2(-stepX, stepY)) +\n\t\t\t// \ttexture(uSampler, vTexturePosition - vec2(stepX, -stepY)) +\n\t\t\t// \ttexture(uSampler, vTexturePosition - vec2(-stepX, -stepY))\n\t\t\t// )/5.0;\n\t\t}\n\t`\n};\n\nexport default GameOfLifeBlur;\n\n\n\n// WEBPACK FOOTER //\n// ./src/programs/gameoflife-blur.js","import identity from './identity2d';\n\nconst GameOfLife = {\n\tvertexSource: identity.vertexSource,\n\n\tfragmentSource: `#version 300 es\n\t\tprecision highp float;\n\t\tuniform sampler2D uSampler;\n\t\tin vec2 vTexturePosition;\n\t\tin vec2 vPosition;\n\t\tuniform vec2 uMousePosition;\n\t\tuniform highp float uWidth;\n\t\tuniform int uShouldUpdate;\n\t\tout vec4 fragmentColor;\n\n\t\tbool isLive(vec2 offset) {\n\t\t\t\tvec4 lastColor = texture(uSampler, vTexturePosition + offset);\n\t\t\t\tif (lastColor.r == 1.0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t}\n\n\t\tvoid main(void) {\n\t\t\tvec4 lastColor = texture(uSampler, vTexturePosition);\n\n\t\t\tif (uShouldUpdate == 0) {\n\t\t\t\tfragmentColor = lastColor;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfloat d = distance(uMousePosition, vPosition);\n\t\t\tif (d < 2.0/uWidth) {\n\t\t\t\tfragmentColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tint liveCount = 0;\n\t\t\tfloat step = 1.0/uWidth;\n\n\t\t\tif (isLive(vec2(-step, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(-step, 0))) {liveCount++;}\n\t\t\tif (isLive(vec2(-step, step))) {liveCount++;}\n\t\t\tif (isLive(vec2(0, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(0, step))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, 0))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, step))) {liveCount++;}\n\n\t\t\t// if (liveCount < 2) {\n\t\t\t// \tfragmentColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t// } else if (liveCount < 4) {\n\t\t\t// \tfragmentColor = vec4(0, 1.0, 0, 1.0);\n\t\t\t// } else if (liveCount < 8) {\n\t\t\t// \tfragmentColor = vec4(0, 0, 1.0, 1.0);\n\t\t\t// } else {\n\t\t\t// \tfragmentColor = vec4(1.0, 0, 1.0, 1.0);\n\t\t\t// }\n\n\t\t\tbool selfIsLive = isLive(vec2(0,0));\n\t\t\tif (selfIsLive && (liveCount == 2 || liveCount == 3)) {\n\t\t\t\tif (lastColor.g < 1.0) {\n\t\t\t\t\tfragmentColor = lastColor + vec4(1.0, 0.01, 0.0, 1.0);\n\t\t\t\t} else {\n\t\t\t\t\tfragmentColor = lastColor + vec4(1.0, 0.0, 0.01, 1.0);\n\t\t\t\t}\n\t\t\t} else if (!selfIsLive && (liveCount == 3)) {\n\t\t\t\tfragmentColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t} else {\n\t\t\t\tfragmentColor = vec4(0.0, 0.0, 0.0, 0.8);\n\t\t\t}\n\t\t}\n\t`\n};\nexport default GameOfLife;\n\n\n\n// WEBPACK FOOTER //\n// ./src/programs/gameoflife.js","import {createProgram, createTexture} from './webgl';\n\nexport default class RenderProgram {\n\tconstructor({shaderSource}) {\n\t\tlet {gl, shaderProgram} = createProgram(shaderSource.vertexSource, shaderSource.fragmentSource);\n\t\tthis.gl = gl;\n\t\tthis.shaderProgram = shaderProgram;\n\t\tthis.currentState = 0;\n\n\t\t// INITIALIZE BUFFERS\n\t\tthis.vertexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tthis.vertices = [\n\t\t\t1, 1, 0,\n\t\t\t-1, 1, 0,\n\t\t\t1, -1, 0,\n\t\t\t-1, -1, 0\n\t\t];\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);\n\t\t// END INITIALIZE BUFFERS\n\n\t\t// POINTERS\n\t\tconst aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\n\t\tgl.enableVertexAttribArray(aPosition);\n\t\t//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\tgl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\n\t\tconst uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\n\t\tgl.uniform1f(uWidth, gl.canvas.width);\n\n\t}\n\n\tdraw(stateTexture) {\n\t\tconst gl = this.gl;\n\n\t\tgl.useProgram(this.shaderProgram);\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, stateTexture);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/render-program.js","import {createProgram, createTexture} from './webgl';\n\nexport default class StateProgram {\n\tconstructor({shaderSource}) {\n\t\tlet {gl, shaderProgram} = createProgram(shaderSource.vertexSource, shaderSource.fragmentSource);\n\t\tthis.gl = gl;\n\t\tthis.shaderProgram = shaderProgram;\n\t\tthis.currentState = 0;\n\n\t\t// INITIALIZE BUFFERS\n\t\tthis.vertexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tthis.vertices = [\n\t\t\t1, 1, 0,\n\t\t\t-1, 1, 0,\n\t\t\t1, -1, 0,\n\t\t\t-1, -1, 0\n\t\t];\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);\n\t\t// END INITIALIZE BUFFERS\n\n\t\t// POINTERS\n\t\tconst aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\n\t\tgl.enableVertexAttribArray(aPosition);\n\t\t//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\tgl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\n\t\tconst uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\n\t\tgl.uniform1f(uWidth, gl.canvas.width);\n\n\t\tthis.uShouldUpdate = gl.getUniformLocation(shaderProgram, \"uShouldUpdate\");\n\n\t\tthis.tTexture0 = createTexture();\n\t\tthis.tTexture1 = createTexture();\n\n\t\tthis.frameBuffer = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t\tthis.frameBuffer.width = gl.canvas.width;\n\t\tthis.frameBuffer.height = gl.canvas.height;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.frameBuffer.width, this.frameBuffer.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n\t\tvar renderBuffer = gl.createRenderbuffer();\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.frameBuffer.width, this.frameBuffer.height);\n\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t}\n\n\tsetState(state) {\n\t\tconst gl = this.gl;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, state);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tdrawState() {\n\t\tconst gl = this.gl;\n\t\tgl.useProgram(this.shaderProgram);\n\n\t\tgl.uniform1i(this.uShouldUpdate, 0);\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tif (this.currentState == 0) {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\t} else {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t}\n\n\tincrementState() {\n\t\tconst gl = this.gl;\n\t\tgl.useProgram(this.shaderProgram);\n\n\t\tgl.uniform1i(this.uShouldUpdate, 1);\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t\tif (this.currentState == 0) {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture0);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.tTexture1, 0);\n\t\t} else {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.tTexture1);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.tTexture0, 0);\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertices.length / 3);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\tthis.currentState = (this.currentState + 1) % 2;\n\t}\n\n\tstateTexture() {\n\t\tif (this.currentState == 0) {\n\t\t\treturn this.tTexture0;\n\t\t} else {\n\t\t\treturn this.tTexture1;\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/state-program.js"],"sourceRoot":""}