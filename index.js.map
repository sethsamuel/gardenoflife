{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 9a18269dadef17931ab7","webpack:///./src/webgl.js","webpack:///./src/index.js","webpack:///./src/programs/gameoflife.js","webpack:///./src/state-program.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","createProgram","vertexSource","fragmentSource","resize","size","Math","pow","floor","log2","min","window","innerWidth","innerHeight","canvas","width","height","gl","viewport","document","body","querySelector","getContext","addEventListener","clearColor","clear","COLOR_BUFFER_BIT","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","console","log","fragmentShader","FRAGMENT_SHADER","shaderProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","Object","defineProperty","value","_interopRequireDefault","obj","__esModule","default","draw","uniform2f","uMousePosition","mousePosition","bindFramebuffer","FRAMEBUFFER","frameBuffer","flip","bindTexture","TEXTURE_2D","tTexture0","framebufferTexture2D","COLOR_ATTACHMENT0","tTexture1","drawArrays","TRIANGLE_STRIP","vertices","length","requestAnimationFrame","_webgl","_stateProgram","_stateProgram2","_gameoflife","_gameoflife2","_createProgram","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","aPosition","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","uWidth","getUniformLocation","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","createFramebuffer","texImage2D","RGBA","UNSIGNED_BYTE","renderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","evt","clientX","clientY","initialCanvas","createElement","context","globalAlpha","i","j","random","fillStyle","fillRect","uniform1f","GameOfLife","_classCallCheck","instance","Constructor","TypeError","StateProgram","_ref","this"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.createProgram = createProgram;\n\tfunction createProgram(vertexSource, fragmentSource) {\n\t\t// GLOBALS\n\t\tvar body = document.body;\n\t\tvar canvas = document.querySelector('canvas');\n\t\tvar gl = canvas.getContext('webgl');\n\t\t// END GLOBALS\n\t\n\t\t// BEGIN WINDOW SIZING\n\t\tfunction resize() {\n\t\t\tvar size = Math.pow(2, Math.floor(Math.log2(Math.min(window.innerWidth, window.innerHeight))));\n\t\t\t// const size = 256;\n\t\t\tcanvas.width = size;\n\t\t\tcanvas.height = size;\n\t\n\t\t\t// Set viewport\n\t\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t\t}\n\t\tresize();\n\t\n\t\twindow.addEventListener('resize', resize);\n\t\t// END WINDOW SIZING\n\t\n\t\t// GL SETTINGS\n\t\n\t\t// Color to draw on clear\n\t\tgl.clearColor(0, 0, 0, 1);\n\t\n\t\t// Clear buffers\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\n\t\t// END GL SETTINGS\n\t\n\t\t// INITIALIZE SHADERS\n\t\n\t\t// CREATE VERTEX SHADER\n\t\tvar vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource(vertexShader, vertexSource);\n\t\tgl.compileShader(vertexShader);\n\t\tif (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n\t\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(vertexShader));\n\t\t} else {\n\t\t\tconsole.log(\"Vertex shader compiled\");\n\t\t}\n\t\t// END CREATE VERTEX SHADER\n\t\n\t\t// CREATE FRAGMENT SHADER\n\t\tvar fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource(fragmentShader, fragmentSource);\n\t\tgl.compileShader(fragmentShader);\n\t\tif (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n\t\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(fragmentShader));\n\t\t} else {\n\t\t\tconsole.log(\"Fragment shader compiled\");\n\t\t}\n\t\t// END CREATE FRAGMENT SHADER\n\t\n\t\t// COMPILE PROGRAM\n\t\tvar shaderProgram = gl.createProgram();\n\t\tgl.attachShader(shaderProgram, vertexShader);\n\t\tgl.attachShader(shaderProgram, fragmentShader);\n\t\tgl.linkProgram(shaderProgram);\n\t\n\t\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\t\tthrow new Error(\"Unable to initialize the shader program.\");\n\t\t} else {\n\t\t\tconsole.log(\"Initialized shader program\");\n\t\t}\n\t\tgl.useProgram(shaderProgram);\n\t\t// END COMPILE PROGRAM\n\t\n\t\t// END INITIALIZE SHADERS\n\t\n\t\n\t\treturn { gl: gl, shaderProgram: shaderProgram };\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _webgl = __webpack_require__(1);\n\t\n\tvar _stateProgram = __webpack_require__(4);\n\t\n\tvar _stateProgram2 = _interopRequireDefault(_stateProgram);\n\t\n\tvar _gameoflife = __webpack_require__(3);\n\t\n\tvar _gameoflife2 = _interopRequireDefault(_gameoflife);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tconsole.log('🐭');\n\t\n\tvar golStateProgram = new _stateProgram2.default({ shaderSource: _gameoflife2.default });\n\t\n\tvar _createProgram = (0, _webgl.createProgram)(_gameoflife2.default.vertexSource, _gameoflife2.default.fragmentSource),\n\t    gl = _createProgram.gl,\n\t    shaderProgram = _createProgram.shaderProgram;\n\t\n\t// INITIALIZE BUFFERS\n\t\n\t\n\tvar vertexBuffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\tvar vertices = [1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0];\n\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\t// END INITIALIZE BUFFERS\n\t\n\t// POINTERS\n\tvar aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\n\tgl.enableVertexAttribArray(aPosition);\n\t//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\tgl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\t\n\tvar uSampler = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\tvar uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\n\tvar uMousePosition = gl.getUniformLocation(shaderProgram, \"uMousePosition\");\n\tvar tTexture0 = gl.createTexture();\n\tgl.activeTexture(gl.TEXTURE0);\n\tgl.bindTexture(gl.TEXTURE_2D, tTexture0);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t\n\tvar tTexture1 = gl.createTexture();\n\tgl.activeTexture(gl.TEXTURE0);\n\tgl.bindTexture(gl.TEXTURE_2D, tTexture1);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t\n\tvar frameBuffer = gl.createFramebuffer();\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\tframeBuffer.width = gl.canvas.width;\n\tframeBuffer.height = gl.canvas.height;\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, frameBuffer.width, frameBuffer.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\n\tvar renderBuffer = gl.createRenderbuffer();\n\tgl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, frameBuffer.width, frameBuffer.height);\n\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\t\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t// END POINTERS\n\t\n\t// INTERACTION HANDLER\n\tvar mousePosition = [];\n\tgl.canvas.addEventListener('mousemove', function (evt) {\n\t\tmousePosition = [(evt.clientX / gl.canvas.width - 0.5) * 2.0, (1.0 - evt.clientY / gl.canvas.height - 0.5) * 2.0];\n\t\t// draw();\n\t});\n\t// END INTERACTION HANDLER\n\t\n\t// DRAW LOOP\n\tgl.clearColor(0, 0, 0, 1.0);\n\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\n\t//Initial state\n\tvar initialCanvas = document.createElement('canvas');\n\tinitialCanvas.width = gl.canvas.width;\n\tinitialCanvas.height = gl.canvas.height;\n\tvar context = initialCanvas.getContext('2d');\n\tcontext.globalAlpha = 1.0;\n\tfor (var i = 0; i < gl.canvas.width; i++) {\n\t\tfor (var j = 0; j < gl.canvas.width; j++) {\n\t\t\tif (Math.random() < 0.35) {\n\t\t\t\tcontext.fillStyle = 'red';\n\t\t\t\tcontext.fillRect(i, j, 1, 1);\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = 'black';\n\t\t\t\tcontext.fillRect(i, j, 1, 1);\n\t\t\t}\n\t\t}\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, tTexture0);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, initialCanvas);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\n\tgl.uniform1f(uWidth, gl.canvas.width);\n\t\n\tvar flip = 0;\n\t\n\tfunction draw() {\n\t\tgl.uniform2f(uMousePosition, mousePosition[0], mousePosition[1]);\n\t\n\t\t//Draw to frame buffer\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\t\tif (flip == 0) {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, tTexture0);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tTexture1, 0);\n\t\t} else {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, tTexture1);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tTexture0, 0);\n\t\t}\n\t\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, vertices.length / 3);\n\t\n\t\t//Draw to canvas\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, vertices.length / 3);\n\t\n\t\tflip = (flip + 1) % 2;\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\n\t\t// setTimeout(draw, 1000);\n\t\trequestAnimationFrame(draw);\n\t}\n\trequestAnimationFrame(draw);\n\t// END DRAW LOOP\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar GameOfLife = {\n\t\tvertexSource: \"\\n\\t\\tprecision highp float;\\n\\t\\tattribute vec3 aPosition;\\n\\t\\tvarying vec2 vTexturePosition;\\n\\t\\tvarying vec2 vPosition;\\n\\t\\tvoid main(void) {\\n\\t\\t\\tvPosition = aPosition.xy;\\n\\t\\t\\tvTexturePosition = vec2(aPosition.x + 1.0, -1.0 + aPosition.y) * 0.5;\\n\\t\\t\\tgl_Position = vec4(aPosition, 1.0);\\n\\t\\t}\\n\\t\",\n\t\n\t\tfragmentSource: \"\\n\\t\\tprecision highp float;\\n\\t\\tuniform sampler2D uSampler;\\n\\t\\tvarying vec2 vTexturePosition;\\n\\t\\tvarying vec2 vPosition;\\n\\t\\tuniform vec2 uMousePosition;\\n\\t\\tuniform highp float uWidth;\\n\\n\\t\\tbool isLive(vec2 offset) {\\n\\t\\t\\t\\tvec4 lastColor = texture2D(uSampler, vTexturePosition + offset);\\n\\t\\t\\t\\tif (lastColor.r == 1.0) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvoid main(void) {\\n\\t\\t\\tfloat d = distance(uMousePosition, vPosition);\\n\\t\\t\\tif (d < 2.0/uWidth) {\\n\\t\\t\\t\\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tint liveCount = 0;\\n\\t\\t\\tfloat step = 1.0/uWidth;\\n\\n\\t\\t\\tif (isLive(vec2(-step, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(-step, 0))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(-step, step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(0, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(0, step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, -step))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, 0))) {liveCount++;}\\n\\t\\t\\tif (isLive(vec2(step, step))) {liveCount++;}\\n\\n\\t\\t\\tif (liveCount < 2) {\\n\\t\\t\\t\\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t} else if (liveCount < 4) {\\n\\t\\t\\t\\tgl_FragColor = vec4(0, 1.0, 0, 1.0);\\n\\t\\t\\t} else if (liveCount < 8) {\\n\\t\\t\\t\\tgl_FragColor = vec4(0, 0, 1.0, 1.0);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tgl_FragColor = vec4(1.0, 0, 1.0, 1.0);\\n\\t\\t\\t}\\n\\n\\t\\t\\tbool selfIsLive = isLive(vec2(0,0));\\n\\t\\t\\tvec4 lastColor = texture2D(uSampler, vTexturePosition);\\n\\t\\t\\tif (selfIsLive && (liveCount == 2 || liveCount == 3)) {\\n\\t\\t\\t\\tif (lastColor.g < 1.0) {\\n\\t\\t\\t\\t\\tgl_FragColor = lastColor + vec4(1.0, 0.01, 0.0, 1.0);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tgl_FragColor = lastColor + vec4(1.0, 0.0, 0.01, 1.0);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (!selfIsLive && (liveCount == 3)) {\\n\\t\\t\\t\\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.8);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"\n\t};\n\texports.default = GameOfLife;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _webgl = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StateProgram = function StateProgram(_ref) {\n\t  var shaderSource = _ref.shaderSource;\n\t\n\t  _classCallCheck(this, StateProgram);\n\t};\n\t\n\texports.default = StateProgram;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9a18269dadef17931ab7","export function createProgram(vertexSource, fragmentSource) {\n\t// GLOBALS\n\tconst body = document.body;\n\tconst canvas = document.querySelector('canvas');\n\tconst gl = canvas.getContext('webgl');\n\t// END GLOBALS\n\n\t// BEGIN WINDOW SIZING\n\tfunction resize() {\n\t\tconst size = Math.pow(2,Math.floor(Math.log2(Math.min(window.innerWidth, window.innerHeight))));\n\t\t// const size = 256;\n\t\tcanvas.width = size;\n\t\tcanvas.height = size;\n\n\t\t// Set viewport\n\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t}\n\tresize();\n\n\twindow.addEventListener('resize', resize);\n\t// END WINDOW SIZING\n\n\t// GL SETTINGS\n\n\t// Color to draw on clear\n\tgl.clearColor(0,0,0,1);\n\n\t// Clear buffers\n\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t// END GL SETTINGS\n\n\t// INITIALIZE SHADERS\n\n\t// CREATE VERTEX SHADER\n\tconst vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vertexShader, vertexSource);\n\tgl.compileShader(vertexShader);\n\tif (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(vertexShader));\n\t}else{\n\t\tconsole.log(\"Vertex shader compiled\");\n\t}\n\t// END CREATE VERTEX SHADER\n\n\t// CREATE FRAGMENT SHADER\n\tconst fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\tgl.shaderSource(fragmentShader, fragmentSource);\n\tgl.compileShader(fragmentShader);\n\tif (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n\t\tthrow new Error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(fragmentShader));\n\t}else{\n\t\tconsole.log(\"Fragment shader compiled\");\n\t}\n\t// END CREATE FRAGMENT SHADER\n\n\t// COMPILE PROGRAM\n\tconst shaderProgram = gl.createProgram();\n\tgl.attachShader(shaderProgram, vertexShader);\n\tgl.attachShader(shaderProgram, fragmentShader);\n\tgl.linkProgram(shaderProgram);\n\n\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\tthrow new Error(\"Unable to initialize the shader program.\");\n\t}else{\n\t\tconsole.log(\"Initialized shader program\");\n\t}\n\tgl.useProgram(shaderProgram);\n\t// END COMPILE PROGRAM\n\n\t// END INITIALIZE SHADERS\n\n\n\treturn {gl, shaderProgram};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webgl.js","import {createProgram} from './webgl';\nimport StateProgram from './state-program';\nimport GameOfLife from './programs/gameoflife';\n\nconsole.log('🐭');\n\nlet golStateProgram = new StateProgram({shaderSource: GameOfLife});\n\nlet {gl, shaderProgram} = createProgram(GameOfLife.vertexSource, GameOfLife.fragmentSource);\n\n// INITIALIZE BUFFERS\nconst vertexBuffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\nconst vertices = [\n\t1, 1, 0,\n\t-1, 1, 0,\n\t1, -1, 0,\n\t-1, -1, 0\n];\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n// END INITIALIZE BUFFERS\n\n// POINTERS\nconst aPosition = gl.getAttribLocation(shaderProgram, \"aPosition\");\ngl.enableVertexAttribArray(aPosition);\n//gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\ngl.vertexAttribPointer(aPosition, 3, gl.FLOAT, false, 0, 0);\n\nconst uSampler = gl.getUniformLocation(shaderProgram, \"uSampler\");\nconst uWidth = gl.getUniformLocation(shaderProgram, \"uWidth\");\nconst uMousePosition = gl.getUniformLocation(shaderProgram, \"uMousePosition\");\nconst tTexture0 = gl.createTexture();\ngl.activeTexture(gl.TEXTURE0);\ngl.bindTexture(gl.TEXTURE_2D, tTexture0);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\nconst tTexture1 = gl.createTexture();\ngl.activeTexture(gl.TEXTURE0);\ngl.bindTexture(gl.TEXTURE_2D, tTexture1);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\nconst frameBuffer = gl.createFramebuffer();\ngl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\nframeBuffer.width = gl.canvas.width;\nframeBuffer.height = gl.canvas.height;\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, frameBuffer.width, frameBuffer.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\nvar renderBuffer = gl.createRenderbuffer();\ngl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\ngl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, frameBuffer.width, frameBuffer.height);\ngl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\n\ngl.bindTexture(gl.TEXTURE_2D, null);\ngl.bindRenderbuffer(gl.RENDERBUFFER, null);\ngl.bindFramebuffer(gl.FRAMEBUFFER, null);\n// END POINTERS\n\n// INTERACTION HANDLER\nvar mousePosition = [];\ngl.canvas.addEventListener('mousemove', evt => {\n  mousePosition = [\n    (evt.clientX/gl.canvas.width - 0.5) * 2.0,\n    (1.0 - evt.clientY/gl.canvas.height - 0.5) * 2.0\n  ];\n\t// draw();\n});\n// END INTERACTION HANDLER\n\n// DRAW LOOP\ngl.clearColor(0, 0, 0, 1.0);\ngl.clear(gl.COLOR_BUFFER_BIT);\n\n//Initial state\nconst initialCanvas = document.createElement('canvas');\ninitialCanvas.width = gl.canvas.width;\ninitialCanvas.height = gl.canvas.height;\nconst context = initialCanvas.getContext('2d');\ncontext.globalAlpha = 1.0;\nfor (var i = 0; i < gl.canvas.width; i++) {\n\tfor (var j = 0; j < gl.canvas.width; j++) {\n\t\tif (Math.random() < 0.35) {\n\t\t\tcontext.fillStyle = 'red';\n\t\t\tcontext.fillRect(i, j, 1, 1);\n\t\t} else {\n\t\t\tcontext.fillStyle = 'black';\n\t\t\tcontext.fillRect(i, j, 1, 1);\n\t\t}\n\t}\n}\ngl.bindTexture(gl.TEXTURE_2D, tTexture0);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, initialCanvas);\ngl.bindTexture(gl.TEXTURE_2D, null);\n\ngl.uniform1f(uWidth, gl.canvas.width);\n\nlet flip = 0;\n\nfunction draw() {\n\tgl.uniform2f(uMousePosition, mousePosition[0], mousePosition[1]);\n\n\t//Draw to frame buffer\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\tif (flip == 0) {\n\t\tgl.bindTexture(gl.TEXTURE_2D, tTexture0);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tTexture1, 0);\n\t} else {\n\t\tgl.bindTexture(gl.TEXTURE_2D, tTexture1);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tTexture0, 0);\n\t}\n\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertices.length / 3);\n\n\t//Draw to canvas\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertices.length / 3);\n\n\tflip = (flip + 1) % 2;\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t// setTimeout(draw, 1000);\n  requestAnimationFrame(draw);\n}\nrequestAnimationFrame(draw);\n// END DRAW LOOP\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const GameOfLife = {\n\tvertexSource: `\n\t\tprecision highp float;\n\t\tattribute vec3 aPosition;\n\t\tvarying vec2 vTexturePosition;\n\t\tvarying vec2 vPosition;\n\t\tvoid main(void) {\n\t\t\tvPosition = aPosition.xy;\n\t\t\tvTexturePosition = vec2(aPosition.x + 1.0, -1.0 + aPosition.y) * 0.5;\n\t\t\tgl_Position = vec4(aPosition, 1.0);\n\t\t}\n\t`,\n\n\tfragmentSource: `\n\t\tprecision highp float;\n\t\tuniform sampler2D uSampler;\n\t\tvarying vec2 vTexturePosition;\n\t\tvarying vec2 vPosition;\n\t\tuniform vec2 uMousePosition;\n\t\tuniform highp float uWidth;\n\n\t\tbool isLive(vec2 offset) {\n\t\t\t\tvec4 lastColor = texture2D(uSampler, vTexturePosition + offset);\n\t\t\t\tif (lastColor.r == 1.0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t}\n\n\t\tvoid main(void) {\n\t\t\tfloat d = distance(uMousePosition, vPosition);\n\t\t\tif (d < 2.0/uWidth) {\n\t\t\t\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tint liveCount = 0;\n\t\t\tfloat step = 1.0/uWidth;\n\n\t\t\tif (isLive(vec2(-step, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(-step, 0))) {liveCount++;}\n\t\t\tif (isLive(vec2(-step, step))) {liveCount++;}\n\t\t\tif (isLive(vec2(0, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(0, step))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, -step))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, 0))) {liveCount++;}\n\t\t\tif (isLive(vec2(step, step))) {liveCount++;}\n\n\t\t\tif (liveCount < 2) {\n\t\t\t\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t} else if (liveCount < 4) {\n\t\t\t\tgl_FragColor = vec4(0, 1.0, 0, 1.0);\n\t\t\t} else if (liveCount < 8) {\n\t\t\t\tgl_FragColor = vec4(0, 0, 1.0, 1.0);\n\t\t\t} else {\n\t\t\t\tgl_FragColor = vec4(1.0, 0, 1.0, 1.0);\n\t\t\t}\n\n\t\t\tbool selfIsLive = isLive(vec2(0,0));\n\t\t\tvec4 lastColor = texture2D(uSampler, vTexturePosition);\n\t\t\tif (selfIsLive && (liveCount == 2 || liveCount == 3)) {\n\t\t\t\tif (lastColor.g < 1.0) {\n\t\t\t\t\tgl_FragColor = lastColor + vec4(1.0, 0.01, 0.0, 1.0);\n\t\t\t\t} else {\n\t\t\t\t\tgl_FragColor = lastColor + vec4(1.0, 0.0, 0.01, 1.0);\n\t\t\t\t}\n\t\t\t} else if (!selfIsLive && (liveCount == 3)) {\n\t\t\t\tgl_FragColor = vec4(1.0, 0, 0, 1.0);\n\t\t\t} else {\n\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.8);\n\t\t\t}\n\t\t}\n\t`\n};\nexport default GameOfLife;\n\n\n\n// WEBPACK FOOTER //\n// ./src/programs/gameoflife.js","import {createProgram} from './webgl';\n\nexport default class StateProgram {\n  constructor({shaderSource}) {\n\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/state-program.js"],"sourceRoot":""}